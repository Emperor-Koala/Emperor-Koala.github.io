{"version":3,"sources":["Constants.ts","Enigma.tsx","App.tsx","test/reportWebVitals.ts","index.tsx"],"names":["allowedCharacters","wirings","endWiring","getRandomInt","max","Math","floor","random","Rotor","num","position","runThrough","input","forward","wiring","length","ints","output","toCookieValue","this","Plug","conn1","conn2","color","toJson","indexOf","toLowerCase","Enigma","props","initialPlugs","setupRotors","rotor1","rotor2","rotor3","rotor1Cookie","cookies","get","doNotParse","rotor1Obj","JSON","parse","rotor2Cookie","rotor2Obj","rotor3Cookie","rotor3Obj","r1","r2","r3","saveCookieData","set","state","plugs","plug","push","stringify","keydown","event","preventDefault","stopPropagation","key","pressedKey","includes","cipherKey","runMachine","setState","prevState","litKey","cipherText","keyup","runThroughPlugs","connection1","connection2","char","console","error","currentNo","charAt","toggleDarkMode","value","target","checked","path","darkMode","document","body","classList","add","remove","rotors","dm","plugsStr","plugsArr","setInterval","addEventListener","removeEventListener","className","style","paddingBottom","marginRight","onClick","ogNum","nextNum","borderTopLeftRadius","borderTopRightRadius","rotor","borderLeft","height","marginLeft","name","type","onChange","split","map","KeyboardChar","pressed","toUpperCase","alignItems","marginTop","marginBottom","width","borderRadius","border","boxShadow","padding","fontSize","setPlugs","React","Component","Plugboard","clicked","_","cloneDeep","filter","fromChar","currentColor","hover","hovering","hoveringChar","toString","padStart","themeClass","characterMapper","find","onMouseEnter","onMouseLeave","zIndex","from","to","fromAnchor","toAnchor","borderWidth","borderColor","withCookies","App","CookiesProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8NAAMA,EAA4B,0CAE5BC,EAAU,CACZ,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,KACpW,CAAC,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,KACpW,CAAC,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,KACpW,CAAC,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,KACpW,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,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","file":"static/js/main.3a464012.chunk.js","sourcesContent":["const allowedCharacters: string = \"1234567890qwertyuiopasdfghjklzxcvbnm\\t \";\n\nconst wirings = [\n    [[0, 5], [1, 34], [2, 4], [3, 0], [4, 3], [5, 6], [6, 37], [7, 8], [8, 22], [9, 29], [10, 2], [11, 26], [12, 25], [13, 31], [14, 27], [15, 32], [16, 7], [17, 23], [18, 35], [19, 11], [20, 18], [21, 30], [22, 28], [23, 36], [24, 16], [25, 15], [26, 19], [27, 20], [28, 24], [29, 9], [30, 1], [31, 21], [32, 17], [33, 13], [34, 10], [35, 33], [36, 14], [37, 12]],\n    [[0, 12], [1, 25], [2, 32], [3, 10], [4, 26], [5, 20], [6, 9], [7, 35], [8, 37], [9, 6], [10, 19], [11, 34], [12, 2], [13, 4], [14, 7], [15, 3], [16, 22], [17, 33], [18, 29], [19, 13], [20, 30], [21, 14], [22, 8], [23, 24], [24, 28], [25, 23], [26, 18], [27, 15], [28, 27], [29, 0], [30, 21], [31, 1], [32, 36], [33, 31], [34, 5], [35, 16], [36, 11], [37, 17]],\n    [[0, 27], [1, 34], [2, 26], [3, 31], [4, 11], [5, 28], [6, 29], [7, 8], [8, 5], [9, 1], [10, 13], [11, 35], [12, 37], [13, 0], [14, 7], [15, 33], [16, 19], [17, 30], [18, 3], [19, 23], [20, 10], [21, 4], [22, 21], [23, 20], [24, 18], [25, 14], [26, 32], [27, 9], [28, 17], [29, 22], [30, 6], [31, 16], [32, 24], [33, 12], [34, 25], [35, 2], [36, 15], [37, 36]],\n    [[0, 32], [1, 33], [2, 22], [3, 35], [4, 7], [5, 19], [6, 30], [7, 2], [8, 29], [9, 10], [10, 9], [11, 36], [12, 37], [13, 27], [14, 11], [15, 13], [16, 1], [17, 4], [18, 5], [19, 17], [20, 34], [21, 31], [22, 0], [23, 14], [24, 6], [25, 8], [26, 21], [27, 3], [28, 24], [29, 28], [30, 26], [31, 18], [32, 25], [33, 20], [34, 12], [35, 16], [36, 15], [37, 23]],\n    [[0, 2], [1, 30], [2, 7], [3, 22], [4, 6], [5, 36], [6, 1], [7, 32], [8, 27], [9, 3], [10, 15], [11, 35], [12, 34], [13, 14], [14, 20], [15, 17], [16, 31], [17, 11], [18, 10], [19, 24], [20, 28], [21, 25], [22, 4], [23, 13], [24, 8], [25, 33], [26, 21], [27, 37], [28, 0], [29, 12], [30, 23], [31, 19], [32, 16], [33, 18], [34, 5], [35, 9], [36, 26], [37, 29]]\n];\n\nconst endWiring = [[0, 7], [1, 25], [2, 33], [3, 10], [4, 23], [5, 6], [6, 5], [7, 0], [8, 17], [9, 36], [10, 3], [11, 28], [12, 32], [13, 24], [14, 35], [15, 21], [16, 34], [17, 8], [18, 31], [19, 30], [20, 29], [21, 15], [22, 27], [23, 4], [24, 13], [25, 1], [26, 37], [27, 22], [28, 11], [29, 20], [30, 19], [31, 18], [32, 12], [33, 2], [34, 16], [35, 14], [36, 9], [37, 26]];\n\n/**\n * Returns a random integer between 0 (inclusive) and max (exclusive).\n */\nconst getRandomInt = (max: number): number => {\n    max = Math.floor(max);\n    return Math.floor(Math.random() * max);\n}\n\nexport {\n    allowedCharacters,\n    wirings,\n    endWiring,\n    getRandomInt,\n}","import React, {ChangeEvent} from \"react\";\nimport {allowedCharacters, getRandomInt, wirings, endWiring} from \"./Constants\";\nimport LineTo from \"react-lineto\";\nimport _ from \"lodash\";\nimport {ReactCookieProps, withCookies} from \"react-cookie\";\n\nclass Rotor {\n    num: number;\n    position: number;\n\n    constructor(num: number, position: number) {\n        this.num = num;\n        this.position = position;\n    }\n\n    runThrough = (input: number, forward: boolean) => {\n        let wiring = wirings[this.num];\n        if (forward) {\n            input = (input + this.position) % wiring.length;\n\n            return wiring[input][1];\n        } else {\n            for (let ints of wiring) {\n                if (input === ints[1]) {\n                    let output = (ints[0] - this.position);\n                    while (output < 0) {\n                        output = wiring.length + output;\n                    }\n                    output = output % wiring.length;\n\n                    return output;\n                }\n            }\n        }\n        return -1;\n    };\n\n\n    toCookieValue = () => `{\"num\": ${this.num}, \"position\": ${this.position}}`;\n\n}\n\nclass Plug {\n    readonly conn1: string;\n    readonly conn2: string;\n    readonly color: string;\n\n    constructor(conn1: string, conn2: string, color: string) {\n        this.conn1 = conn1;\n        this.conn2 = conn2;\n        this.color = color;\n    }\n\n    public get connection1() { return allowedCharacters.indexOf(this.conn1.toLowerCase()); }\n    public get connection2() { return allowedCharacters.indexOf(this.conn2.toLowerCase()); }\n\n    toJson = () => {\n        return {\n            conn1: this.conn1,\n            conn2: this.conn2,\n            color: this.color,\n        }\n    }\n}\n\ninterface EnigmaState {\n    pressedKey: string | null;\n    litKey: string | null;\n    rotor1: Rotor;\n    rotor2: Rotor;\n    rotor3: Rotor;\n    darkMode: boolean;\n    plugs: Plug[];\n    cipherText: string;\n}\n\nclass Enigma extends React.Component<ReactCookieProps, EnigmaState> {\n\n    initialPlugs: Plug[];\n\n    constructor(props: ReactCookieProps) {\n        super(props);\n        let rotors: {\n            rotor1: Rotor,\n            rotor2: Rotor,\n            rotor3: Rotor,\n        } = this.setupRotors();\n        let dm = (props.cookies?.get(\"darkMode\") || \"FALSE\") === \"TRUE\";\n        let plugs: Plug[] = [];\n\n        let plugsStr = props.cookies?.get(\"plugs\", {doNotParse: true});\n        if (plugsStr) {\n            let plugsArr = JSON.parse(plugsStr);\n            for (let plug of plugsArr) {\n                if (!plug[\"conn1\"] || !plug[\"conn2\"] || !plug[\"color\"]) continue;\n                plugs.push(new Plug(plug[\"conn1\"], plug[\"conn2\"], plug[\"color\"]));\n            }\n        }\n\n        this.initialPlugs = plugs;\n\n        this.state = {\n            pressedKey: null,\n            litKey: null,\n            ...rotors,\n            darkMode: dm,\n            plugs: plugs,\n            cipherText: \"\",\n        };\n        if (dm) document.body.classList.add('dark');\n        setInterval(this.saveCookieData, 30000);\n    }\n\n    setupRotors = (): {\n        rotor1: Rotor,\n        rotor2: Rotor,\n        rotor3: Rotor,\n    } => {\n        let rotor1: Rotor | null = null;\n        let rotor2: Rotor | null = null;\n        let rotor3: Rotor | null = null;\n\n        let rotor1Cookie = this.props.cookies?.get(\"rotor1\", {doNotParse: true});\n        if (rotor1Cookie) {\n            let rotor1Obj = JSON.parse(rotor1Cookie);\n            if (rotor1Obj)\n                rotor1 = new Rotor(rotor1Obj[\"num\"], rotor1Obj[\"position\"]);\n        }\n\n        let rotor2Cookie = this.props.cookies?.get(\"rotor2\", {doNotParse: true});\n        if (rotor2Cookie) {\n            let rotor2Obj = JSON.parse(rotor2Cookie);\n            if (rotor2Obj)\n                rotor2 = new Rotor(rotor2Obj[\"num\"], rotor2Obj[\"position\"]);\n        }\n\n        let rotor3Cookie = this.props.cookies?.get(\"rotor3\", {doNotParse: true});\n        if (rotor3Cookie) {\n            let rotor3Obj = JSON.parse(rotor3Cookie);\n            if (rotor3Obj)\n                rotor3 = new Rotor(rotor3Obj[\"num\"], rotor3Obj[\"position\"]);\n        }\n\n        if (!rotor1) {\n            if (!rotor2) {\n                if (!rotor3) {\n                    let r1 = getRandomInt(5);\n                    let r2 = getRandomInt(5);\n                    while (r1 === r2) r2 = getRandomInt(5);\n\n                    let r3 = getRandomInt(5);\n                    while (r3 === r1 || r3 === r2) r3 = getRandomInt(5);\n\n                    rotor1 = new Rotor(r1, getRandomInt(wirings[r1].length));\n                    rotor2 = new Rotor(r2, getRandomInt(wirings[r2].length));\n                    rotor3 = new Rotor(r3, getRandomInt(wirings[r3].length));\n\n                } else {\n                    let r3 = rotor3.num;\n\n                    let r1 = getRandomInt(5);\n                    while (r1 === r3) r1 = getRandomInt(5);\n\n                    let r2 = getRandomInt(5);\n                    while (r2 === r1 || r2 === r3) r2 = getRandomInt(5);\n\n                    rotor1 = new Rotor(r1, getRandomInt(wirings[r1].length));\n                    rotor2 = new Rotor(r2, getRandomInt(wirings[r2].length));\n\n                }\n            } else {\n                let r2 = rotor2.num;\n\n                if (!rotor3) {\n                    let r1 = getRandomInt(5);\n                    while (r1 === r2) r1 = getRandomInt(5);\n\n                    let r3 = getRandomInt(5);\n                    while (r3 === r1 || r3 === r2) r3 = getRandomInt(5);\n\n                    rotor1 = new Rotor(r1, getRandomInt(wirings[r1].length));\n                    rotor3 = new Rotor(r3, getRandomInt(wirings[r3].length));\n\n                } else {\n                    let r3 = rotor3.num;\n\n                    let r1 = getRandomInt(5);\n                    while (r1 === r2 || r1 === r3) r1 = getRandomInt(5);\n\n                    rotor1 = new Rotor(r1, getRandomInt(wirings[r1].length))\n                }\n            }\n        } else {\n            let r1 = rotor1.num;\n\n            if (!rotor2) {\n                if (!rotor3) {\n                    let r2 = getRandomInt(5);\n                    while (r1 === r2) r2 = getRandomInt(5);\n\n                    let r3 = getRandomInt(5);\n                    while (r3 === r1 || r3 === r2) r3 = getRandomInt(5);\n\n                    rotor2 = new Rotor(r2, getRandomInt(wirings[r2].length));\n                    rotor3 = new Rotor(r3, getRandomInt(wirings[r3].length));\n\n                } else {\n                    let r3 = rotor3.num;\n\n                    let r2 = getRandomInt(5);\n                    while (r2 === r1 || r2 === r3) r2 = getRandomInt(5);\n\n                    rotor2 = new Rotor(r2, getRandomInt(wirings[r2].length));\n\n                }\n            } else {\n                let r2 = rotor2.num;\n\n                if (!rotor3) {\n                    let r3 = getRandomInt(5);\n                    while (r3 === r1 || r3 === r2) r3 = getRandomInt(5);\n\n                    rotor3 = new Rotor(r3, getRandomInt(wirings[r3].length));\n                }\n            }\n        }\n\n        return {\n            rotor1: rotor1,\n            rotor2: rotor2,\n            rotor3: rotor3,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.keydown);\n        document.addEventListener(\"keyup\", this.keyup);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.keydown);\n        document.removeEventListener(\"keyup\", this.keyup);\n    }\n\n    saveCookieData = () => {\n        this.props.cookies?.set(\"rotor1\", this.state.rotor1.toCookieValue());\n        this.props.cookies?.set(\"rotor2\", this.state.rotor2.toCookieValue());\n        this.props.cookies?.set(\"rotor3\", this.state.rotor3.toCookieValue());\n\n        let plugs: { conn1: string, conn2: string, color: string }[] = [];\n\n        for (let plug of this.state.plugs) {\n            plugs.push(plug.toJson());\n        }\n\n        this.props.cookies?.set(\"plugs\", JSON.stringify(plugs));\n    }\n\n    keydown = (event: KeyboardEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        let key = event.key;\n        if (key === \"Tab\") key = \"\\t\";\n        if (this.state.pressedKey === null && allowedCharacters.includes(key)) {\n            let cipherKey = this.runMachine(key);\n            this.setState((prevState) => {\n                return {\n                    pressedKey: key,\n                    litKey: cipherKey,\n                    cipherText: prevState.cipherText + cipherKey,\n                }\n            });\n        }\n    }\n\n    keyup = (event: KeyboardEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        let key = event.key;\n        if (key === \"Tab\") key = \"\\t\";\n        if (this.state.pressedKey !== null && this.state.pressedKey === key)\n            this.setState({pressedKey: null, litKey: null})\n    }\n\n    runThroughPlugs = (input: number) => {\n        for (let plug of this.state.plugs) {\n            if (plug.connection1 === input)\n                return plug.connection2;\n            if (plug.connection2 === input)\n                return plug.connection1;\n        }\n        return input;\n    }\n\n    runMachine = (char: string) => {\n        if (this.state.rotor1 === this.state.rotor2 || this.state.rotor3 === this.state.rotor2 || this.state.rotor1 === this.state.rotor3) {\n            console.error(\"Error rotors cannot have the same number\");\n            return '?';\n        }\n\n        let { rotor1, rotor2, rotor3 } = this.state;\n\n        let currentNo = allowedCharacters.indexOf(char);\n        currentNo = this.runThroughPlugs(currentNo);\n        currentNo = rotor1.runThrough(currentNo, true);\n        currentNo = rotor2.runThrough(currentNo, true);\n        currentNo = rotor3.runThrough(currentNo, true);\n        currentNo = endWiring[currentNo%endWiring.length][1];\n        currentNo = rotor3.runThrough(currentNo, false);\n        currentNo = rotor2.runThrough(currentNo, false);\n        currentNo = rotor1.runThrough(currentNo, false);\n        currentNo = this.runThroughPlugs(currentNo);\n\n        rotor1.position += 1;\n        if (rotor1.position === wirings[rotor1.num].length) {\n            rotor1.position = 0;\n            rotor2.position+=1;\n            if (rotor2.position === wirings[rotor2.num].length) {\n                rotor2.position = 0;\n                rotor3.position+=1;\n                if (rotor3.position === wirings[rotor3.num].length) {\n                    rotor3.position = 0;\n                }\n            }\n        }\n\n        this.setState({\n            rotor1: rotor1,\n            rotor2: rotor2,\n            rotor3: rotor3\n        });\n\n        if (currentNo === -1) {\n            console.error(this.state.rotor1.position + \", \" + this.state.rotor2.position + \", \" + this.state.rotor3.position);\n        }\n\n        return allowedCharacters.charAt(currentNo);\n    }\n\n    toggleDarkMode = (event: ChangeEvent<HTMLInputElement>) => {\n        let value = event.target.checked;\n        this.props.cookies?.set(\"darkMode\", value, {path: \"/\"});\n        this.setState({darkMode: value});\n        if (value) document.body.classList.add('dark');\n        else document.body.classList.remove('dark');\n    }\n\n    render() {\n        return (\n            <div className={'ek-container'}>\n                <div style={{paddingBottom: \"10px\"}} className={'ek-row'}>\n                    { /* rotor editors */ }\n                    <div style={{marginRight: \"5px\"}} className={'ek-column'}>\n                        <div className={'ek-row'}>\n                            <button\n                                className={`rotor-number ${this.state.darkMode ? 'dark' : ''}`}\n                                onClick={() => {\n                                    let {rotor1, rotor2, rotor3} = this.state;\n                                    let ogNum = rotor3.num;\n                                    let nextNum = (ogNum + 1) % 5;\n                                    while (nextNum !== ogNum && (nextNum === rotor1.num || nextNum === rotor2.num))\n                                        nextNum = (nextNum + 1) % 5;\n                                    rotor3.num = nextNum;\n                                    this.setState({rotor3: rotor3});\n                                }}\n                            >{this.state.rotor3.num}</button>\n                        </div>\n\n                        <button\n                            style={{borderTopLeftRadius: \"0\", borderTopRightRadius: \"0\"}}\n                            className={`flipped ${this.state.darkMode ? 'dark' : ''}`}\n                            onClick={() => {\n                                let rotor = this.state.rotor3;\n                                rotor.position = (rotor.position+1) % (wirings[rotor.num].length);\n                                this.setState({rotor3: rotor});\n                            }}\n                        >\n                            &#x25BE;\n                        </button>\n                        <div className={`rotor-position ${this.state.darkMode ? 'dark' : ''}`}>\n                            {this.state.rotor3.position}\n                        </div>\n                        <button\n                            style={{borderTopLeftRadius: \"0\", borderTopRightRadius: \"0\"}}\n                            className={this.state.darkMode ? 'dark' : ''}\n                            onClick={() => {\n                                let rotor = this.state.rotor3;\n                                if (rotor.position === 0) rotor.position = wirings[rotor.num].length;\n                                rotor.position = (rotor.position-1);\n                                this.setState({rotor3: rotor});\n                            }}\n                        >\n                            &#x25BE;\n                        </button>\n                    </div>\n\n                    <div style={{marginRight: \"5px\"}} className={'ek-column'}>\n                        <div className={'ek-row'}>\n                            <button\n                                className={`rotor-number ${this.state.darkMode ? 'dark' : ''}`}\n                                onClick={() => {\n                                    let {rotor1, rotor2, rotor3} = this.state;\n                                    let ogNum = rotor2.num;\n                                    let nextNum = (ogNum + 1) % 5;\n                                    while (nextNum !== ogNum && (nextNum === rotor3.num || nextNum === rotor1.num))\n                                        nextNum = (nextNum + 1) % 5;\n                                    rotor2.num = nextNum;\n                                    this.setState({rotor2: rotor2});\n                                }}\n                            >{this.state.rotor2.num}</button>\n                        </div>\n\n                        <button\n                            style={{borderTopLeftRadius: \"0\", borderTopRightRadius: \"0\"}}\n                            className={`flipped ${this.state.darkMode ? 'dark' : ''}`}\n                            onClick={() => {\n                                let rotor = this.state.rotor2;\n                                rotor.position = (rotor.position+1) % (wirings[rotor.num].length);\n                                this.setState({rotor2: rotor});\n                            }}\n                        >\n                            &#x25BE;\n                        </button>\n                        <div className={`rotor-position ${this.state.darkMode ? 'dark' : ''}`}>\n                            {this.state.rotor2.position}\n                        </div>\n                        <button\n                            style={{borderTopLeftRadius: \"0\", borderTopRightRadius: \"0\"}}\n                            className={this.state.darkMode ? 'dark' : ''}\n                            onClick={() => {\n                                let rotor = this.state.rotor2;\n                                if (rotor.position === 0) rotor.position = wirings[rotor.num].length;\n                                rotor.position = (rotor.position-1);\n                                this.setState({rotor2: rotor});\n                            }}\n                        >\n                            &#x25BE;\n                        </button>\n                    </div>\n\n                    <div style={{marginRight: \"5px\"}} className={'ek-column'}>\n                        <div className={'ek-row'}>\n                            <button\n                                className={`rotor-number ${this.state.darkMode ? 'dark' : ''}`}\n                                onClick={() => {\n                                    let {rotor1, rotor2, rotor3} = this.state;\n                                    let ogNum = rotor1.num;\n                                    let nextNum = (ogNum + 1) % 5;\n                                    while (nextNum !== ogNum && (nextNum === rotor3.num || nextNum === rotor2.num))\n                                        nextNum = (nextNum + 1) % 5;\n                                    rotor1.num = nextNum;\n                                    this.setState({rotor1: rotor1});\n                                }}\n                            >{this.state.rotor1.num}</button>\n                        </div>\n\n                        <button\n                            style={{borderTopLeftRadius: \"0\", borderTopRightRadius: \"0\"}}\n                            className={`flipped ${this.state.darkMode ? 'dark' : ''}`}\n                            onClick={() => {\n                                let rotor = this.state.rotor1;\n                                rotor.position = (rotor.position+1) % (wirings[rotor.num].length);\n                                this.setState({rotor1: rotor});\n                            }}\n                        >\n                            &#x25BE;\n                        </button>\n                        <div className={`rotor-position ${this.state.darkMode ? 'dark' : ''}`}>\n                            {this.state.rotor1.position}\n                        </div>\n                        <button\n                            style={{borderTopLeftRadius: \"0\", borderTopRightRadius: \"0\"}}\n                            className={this.state.darkMode ? 'dark' : ''}\n                            onClick={() => {\n                                let rotor = this.state.rotor1;\n                                if (rotor.position === 0) rotor.position = wirings[rotor.num].length;\n                                rotor.position = (rotor.position-1);\n                                this.setState({rotor1: rotor});\n                            }}\n                        >\n                            &#x25BE;\n                        </button>\n                    </div>\n\n                    <div style={{borderLeft: \"1px solid #888\", height: \"100px\", marginRight: \"8px\", marginLeft: \"8px\"}} />\n\n                    <label className={this.state.darkMode ? \"dark-mode-text\" : \"\"}>\n                        <input\n                            style={{marginRight: \"5px\"}}\n                            name={\"darkMode\"}\n                            type={\"checkbox\"}\n                            checked={this.state.darkMode}\n                            onChange={this.toggleDarkMode}\n                        />\n                        Dark Mode\n                    </label>\n                </div>\n                <div className={'ek-row'}>\n                    {'1234567890'.split('').map((char) =>\n                        <KeyboardChar\n                            key={char}\n                            char={char}\n                            pressed={char === this.state.litKey?.toUpperCase()}\n                            darkMode={this.state.darkMode}\n                        />\n                    )}\n                </div>\n                <div className={'ek-row'}>\n                    <KeyboardChar\n                        char={'Tab'}\n                        pressed={\"\\t\" === this.state.litKey}\n                        darkMode={this.state.darkMode}\n                    />\n                    {'QWERTYUIOP'.split('').map((char) =>\n                        <KeyboardChar\n                            key={char}\n                            char={char}\n                            pressed={char === this.state.litKey?.toUpperCase()}\n                            darkMode={this.state.darkMode}\n                        />\n                    )}\n                </div>\n                <div className={'ek-row'}>\n                    {'ASDFGHJKL'.split('').map((char) =>\n                        <KeyboardChar\n                            key={char}\n                            char={char}\n                            pressed={char === this.state.litKey?.toUpperCase()}\n                            darkMode={this.state.darkMode}\n                        />\n                    )}\n                </div>\n                <div className={'ek-row'}>\n                    {'ZXCVBNM'.split('').map((char) =>\n                        <KeyboardChar\n                            key={char}\n                            char={char}\n                            pressed={char === this.state.litKey?.toUpperCase()}\n                            darkMode={this.state.darkMode}\n                        />\n                    )}\n                </div>\n                <div className={'ek-row'}>\n                    <KeyboardChar\n                        char={'Space'}\n                        pressed={\" \" === this.state.litKey}\n                        darkMode={this.state.darkMode}\n                    />\n                </div>\n                <div\n                    className={'ek-row'}\n                    style={{\n                        alignItems: \"stretch\",\n                        marginTop: \"8px\",\n                        marginBottom: \"8px\",\n                    }}\n                >\n                    <input\n                        style={{\n                            height: \"35px\",\n                            width: \"300px\",\n                            borderRadius: \"2px\",\n                            border: \"none\",\n                            boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",\n                            marginRight: \"10px\",\n                        }}\n                        value={this.state.cipherText}\n                    />\n                    <button\n                        className={this.state.darkMode ? 'dark' : ''}\n                        style={{padding: \"0 15px\"}}\n                        onClick={() => {\n                            this.setState({\n                                cipherText: \"\",\n                            });\n                        }}\n                    >\n                        Clear\n                    </button>\n                </div>\n                <div className={'ek-row'}><hr /></div>\n                <div\n                    className={'ek-row'}\n                    style={{\n                        fontSize: \"18pt\",\n                        color: this.state.darkMode ? \"#eee\" : \"black\",\n                        paddingBottom: \"5px\",\n                    }}\n                >\n                    Plugboard\n                </div>\n                <Plugboard\n                    darkMode={this.state.darkMode}\n                    setPlugs={(plugs) => {\n                        this.setState({\n                            plugs: plugs\n                        });\n                    }}\n                    initialPlugs={this.initialPlugs}\n                />\n            </div>\n        );\n    }\n}\n\nfunction KeyboardChar(props: {char: string, pressed: boolean, darkMode: boolean}) {\n    return (\n        <div\n            className={`keyboard-char ${props.darkMode ? 'dark' : ''} ${props.pressed ? 'pressed' : ''}`}\n            style={props.char === 'Tab' ? {\n                width: \"100px\"\n            } : props.char === 'Space' ? {\n                width: \"200px\",\n                height: \"70px\"\n            } : {}}\n        >\n            <p>{props.char}</p>\n        </div>\n    );\n}\n\ninterface PlugboardProps {\n    darkMode: boolean;\n    setPlugs: (plugs: Plug[]) => void,\n    initialPlugs: Plug[],\n}\n\ninterface PlugboardState {\n    plugs: Plug[];\n    fromChar: string | null;\n    currentColor: string;\n    hoveringChar: string | null;\n}\n\nexport class Plugboard extends React.Component<PlugboardProps, PlugboardState> {\n\n    constructor(props: PlugboardProps) {\n        super(props);\n\n        this.state = {\n            plugs: props.initialPlugs,\n            fromChar: null,\n            currentColor: \"\",\n            hoveringChar: null\n        };\n    }\n\n    componentDidMount() {\n        this.setState({});\n    }\n\n    clicked = (char: string) => {\n        let plugs = _.cloneDeep(this.state.plugs)\n            .filter(plug => !(plug.conn1 === char || plug.conn2 === char));\n\n        if (this.state.fromChar === char)\n            this.setState({fromChar: null, plugs: plugs});\n        else {\n            if (this.state.fromChar === null) {\n                this.setState({fromChar: char, plugs: plugs});\n                return;\n            }\n\n            plugs.push(new Plug(this.state.fromChar, char, this.state.currentColor));\n\n            this.setState({\n                fromChar: null,\n                plugs: plugs,\n            });\n\n            this.props.setPlugs(plugs);\n        }\n    }\n\n    hover = (char: string, hovering: boolean) => {\n        if (hovering) {\n            if (this.state.fromChar !== null)\n                this.setState({hoveringChar: char});\n            else\n                this.setState({\n                    hoveringChar: char,\n                    currentColor: `#${getRandomInt(256).toString(16).padStart(2, \"0\")}${getRandomInt(256).toString(16).padStart(2, \"0\")}${getRandomInt(256).toString(16).padStart(2, \"0\")}`\n                });\n        } else if (this.state.hoveringChar === char) {\n            this.setState({hoveringChar: null})\n        }\n    }\n\n    themeClass = () => {\n        if (this.props.darkMode)\n            return \"dark\";\n        return \"\";\n    }\n\n    characterMapper = (char: string) => {\n        let style: React.CSSProperties = {};\n        if (char === \"\\t\") {\n            style[\"width\"] = \"100px\";\n        }\n        let plug = this.state.plugs.find((plug) => plug.conn1 === char || plug.conn2 === char);\n\n        if (plug)\n            style[\"backgroundColor\"] = plug.color;\n        else if (this.state.fromChar === char || this.state.hoveringChar === char)\n            style[\"backgroundColor\"] = this.state.currentColor;\n\n        return (\n            <div\n                key={`Character-${char === \"\\t\" ? \"Tab\" : char}`}\n                className={`keyboard-char plugboard-char ${this.themeClass()} Character-${char === \"\\t\" ? \"Tab\" : char}`}\n                style={style}\n                onClick={() => this.clicked(char)}\n                onMouseEnter={() => this.hover(char, true)}\n                onMouseLeave={() => this.hover(char, false)}\n            >\n                <p style={{zIndex: 10}}>{char === \"\\t\" ? \"Tab\" : char}</p>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={'ek-row'}>\n                    {\"1234567890\".split(\"\").map(this.characterMapper)}\n                </div>\n                <div className={'ek-row'}>\n                    {\"\\tQWERTYUIOP\".split(\"\").map(this.characterMapper)}\n                </div>\n                <div className={'ek-row'}>\n                    {\"ASDFGHJKL\".split(\"\").map(this.characterMapper)}\n                </div>\n                <div className={'ek-row'}>\n                    {\"ZXCVBNM\".split(\"\").map(this.characterMapper)}\n                </div>\n                <div className={'ek-row'}>\n                    {(() => {\n                        let char = \" \";\n                        let plug = this.state.plugs.find((plug) => plug.conn1 === char || plug.conn2 === char);\n                        let style: React.CSSProperties = {\n                            width: \"200px\",\n                            height: \"70px\",\n                        }\n\n                        if (plug)\n                            style[\"backgroundColor\"] = plug.color;\n                        else if (this.state.fromChar === char || this.state.hoveringChar === char)\n                            style[\"backgroundColor\"] = this.state.currentColor;\n\n                        return (\n                            <div\n                                className={`keyboard-char plugboard-char ${this.themeClass()} Character-Space`}\n                                style={style}\n                                onClick={() => this.clicked(char)}\n                                onMouseEnter={() => this.hover(char, true)}\n                                onMouseLeave={() => this.hover(char, false)}\n                            >\n                                <p style={{zIndex: 10}}>Space</p>\n                            </div>\n                        );\n                    })()}\n                </div>\n                {this.state.plugs.map(plug => {\n                    return (\n                        <LineTo\n                            key={`Plug-${plug.conn1}-${plug.conn2}`}\n                            from={`Character-${plug.conn1 === \"\\t\" ? \"Tab\" : plug.conn1 === \" \" ? \"Space\" : plug.conn1}`}\n                            to={`Character-${plug.conn2 === \"\\t\" ? \"Tab\" : plug.conn2 === \" \" ? \"Space\" : plug.conn2}`}\n                            fromAnchor={\"middle middle\"}\n                            toAnchor={\"middle middle\"}\n                            borderWidth={3}\n                            borderColor={plug.color}\n                        />\n                    );\n                })}\n            </div>\n        );\n    }\n\n}\n\nexport default withCookies(Enigma);\n","import React from 'react';\nimport Enigma from \"./Enigma\";\nimport './stylesheets/App.css';\nimport {CookiesProvider} from \"react-cookie\";\n\nfunction App() {\n    return (\n        <CookiesProvider>\n            <Enigma />\n        </CookiesProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './test/reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}